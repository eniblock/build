diff --git a/kubeval/output.go b/kubeval/output.go
index f652cb1..182a1ad 100644
--- a/kubeval/output.go
+++ b/kubeval/output.go
@@ -61,14 +61,14 @@ func newSTDOutputManager() *STDOutputManager {
 func (s *STDOutputManager) Put(result ValidationResult) error {
 	if len(result.Errors) > 0 {
 		for _, desc := range result.Errors {
-			kLog.Warn(result.FileName, "contains an invalid", result.Kind, fmt.Sprintf("(%s)", result.QualifiedName()), "-", desc.String())
+			kLog.Err(result.FileName, "contains an invalid", result.Kind, fmt.Sprintf("(%s)", result.QualifiedName()), "-", desc.String())
 		}
 	} else if result.Kind == "" {
 		kLog.Success(result.FileName, "contains an empty YAML document")
 	} else if !result.ValidatedAgainstSchema {
 		kLog.Warn(result.FileName, "containing a", result.Kind, fmt.Sprintf("(%s)", result.QualifiedName()), "was not validated against a schema")
 	} else {
-		kLog.Success(result.FileName, "contains a valid", result.Kind, fmt.Sprintf("(%s)", result.QualifiedName()))
+		// kLog.Success(result.FileName, "contains a valid", result.Kind, fmt.Sprintf("(%s)", result.QualifiedName()))
 	}
 
 	return nil
diff --git a/log/log.go b/log/log.go
index 680cda6..a76ef6f 100644
--- a/log/log.go
+++ b/log/log.go
@@ -18,6 +18,11 @@ func Warn(message ...string) {
 	fmt.Printf("%s - %v\n", yellow("WARN"), strings.Join(message, " "))
 }
 
+func Err(message ...string) {
+	red := color.New(color.FgRed).SprintFunc()
+	fmt.Printf("%s - %v\n", red("ERR"), strings.Join(message, " "))
+}
+
 func Error(message error) {
 	if merr, ok := message.(*multierror.Error); ok {
 		for _, serr := range merr.Errors {
