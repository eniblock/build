{
  "description": "CiliumNode represents a node managed by Cilium. It contains a specification to control various node specific configuration aspects and a status section to represent the status of the node.",
  "type": "object",
  "required": [
    "metadata",
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "cilium.io/v2"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "CiliumNode"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": [
            "string",
            "null"
          ]
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": [
                  "object",
                  "null"
                ]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            },
            "additionalProperties": false
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "spec": {
      "description": "Spec defines the desired specification/configuration of the node.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "addresses": {
          "description": "Addresses is the list of all node addresses.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "NodeAddress is a node address.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "ip": {
                "description": "IP is an IP of a node",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the node address",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "azure": {
          "description": "Azure is the Azure IPAM specific configuration.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "interface-name": {
              "description": "InterfaceName is the name of the interface the cilium-operator will use to allocate all the IPs on",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "encryption": {
          "description": "Encryption is the encryption configuration of the node.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "key": {
              "description": "Key is the index to the key to use for encryption or 0 if encryption is disabled.",
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "eni": {
          "description": "ENI is the AWS ENI specific configuration.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "availability-zone": {
              "description": "AvailabilityZone is the availability zone to use when allocating ENIs.",
              "type": [
                "string",
                "null"
              ]
            },
            "delete-on-termination": {
              "description": "DeleteOnTermination defines that the ENI should be deleted when the associated instance is terminated. If the parameter is not set the default behavior is to delete the ENI on instance termination.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "first-interface-index": {
              "description": "FirstInterfaceIndex is the index of the first ENI to use for IP allocation, e.g. if the node has eth0, eth1, eth2 and FirstInterfaceIndex is set to 1, then only eth1 and eth2 will be used for IP allocation, eth0 will be ignored for PodIP allocation.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "instance-id": {
              "description": "InstanceID is the AWS InstanceId of the node. The InstanceID is used to retrieve AWS metadata for the node. \n OBSOLETE: This field is obsolete, please use Spec.InstanceID",
              "type": [
                "string",
                "null"
              ]
            },
            "instance-type": {
              "description": "InstanceType is the AWS EC2 instance type, e.g. \"m5.large\"",
              "type": [
                "string",
                "null"
              ]
            },
            "max-above-watermark": {
              "description": "MaxAboveWatermark is the maximum number of addresses to allocate beyond the addresses needed to reach the PreAllocate watermark. Going above the watermark can help reduce the number of API calls to allocate IPs, e.g. when a new ENI is allocated, as many secondary IPs as possible are allocated. Limiting the amount can help reduce waste of IPs. \n OBSOLETE: This field is obsolete, please use Spec.IPAM.MaxAboveWatermark",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "min-allocate": {
              "description": "MinAllocate is the minimum number of IPs that must be allocated when the node is first bootstrapped. It defines the minimum base socket of addresses that must be available. After reaching this watermark, the PreAllocate and MaxAboveWatermark logic takes over to continue allocating IPs. \n OBSOLETE: This field is obsolete, please use Spec.IPAM.MinAllocate",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "pre-allocate": {
              "description": "PreAllocate defines the number of IP addresses that must be available for allocation in the IPAMspec. It defines the buffer of addresses available immediately without requiring cilium-operator to get involved. \n OBSOLETE: This field is obsolete, please use Spec.IPAM.PreAllocate",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "security-group-tags": {
              "description": "SecurityGroupTags is the list of tags to use when evaliating what AWS security groups to use for the ENI.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "security-groups": {
              "description": "SecurityGroups is the list of security groups to attach to any ENI that is created and attached to the instance.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "subnet-tags": {
              "description": "SubnetTags is the list of tags to use when evaluating what AWS subnets to use for ENI and IP allocation.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "vpc-id": {
              "description": "VpcID is the VPC ID to use when allocating ENIs.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "health": {
          "description": "HealthAddressing is the addressing information for health connectivity checking.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "ipv4": {
              "description": "IPv4 is the IPv4 address of the IPv4 health endpoint.",
              "type": [
                "string",
                "null"
              ]
            },
            "ipv6": {
              "description": "IPv6 is the IPv6 address of the IPv4 health endpoint.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "instance-id": {
          "description": "InstanceID is the identifier of the node. This is different from the node name which is typically the FQDN of the node. The InstanceID typically refers to the identifier used by the cloud provider or some other means of identification.",
          "type": [
            "string",
            "null"
          ]
        },
        "ipam": {
          "description": "IPAM is the address management specification. This section can be populated by a user or it can be automatically populated by an IPAM operator.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "max-above-watermark": {
              "description": "MaxAboveWatermark is the maximum number of addresses to allocate beyond the addresses needed to reach the PreAllocate watermark. Going above the watermark can help reduce the number of API calls to allocate IPs, e.g. when a new ENI is allocated, as many secondary IPs as possible are allocated. Limiting the amount can help reduce waste of IPs.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "max-allocate": {
              "description": "MaxAllocate is the maximum number of IPs that can be allocated to the node. When the current amount of allocated IPs will approach this value, the considered value for PreAllocate will decrease down to 0 in order to not attempt to allocate more addresses than defined.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "min-allocate": {
              "description": "MinAllocate is the minimum number of IPs that must be allocated when the node is first bootstrapped. It defines the minimum base socket of addresses that must be available. After reaching this watermark, the PreAllocate and MaxAboveWatermark logic takes over to continue allocating IPs.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "podCIDRs": {
              "description": "PodCIDRs is the list of CIDRs available to the node for allocation. When an IP is used, the IP will be added to Status.IPAM.Used",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "pool": {
              "description": "Pool is the list of IPs available to the node for allocation. When an IP is used, the IP will remain on this list but will be added to Status.IPAM.Used",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "description": "AllocationIP is an IP which is available for allocation, or already has been allocated",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "owner": {
                    "description": "Owner is the owner of the IP. This field is set if the IP has been allocated. It will be set to the pod name or another identifier representing the usage of the IP \n The owner field is left blank for an entry in Spec.IPAM.Pool and filled out as the IP is used and also added to Status.IPAM.Used.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resource": {
                    "description": "Resource is set for both available and allocated IPs, it represents what resource the IP is associated with, e.g. in combination with AWS ENI, this will refer to the ID of the ENI",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "pre-allocate": {
              "description": "PreAllocate defines the number of IP addresses that must be available for allocation in the IPAMspec. It defines the buffer of addresses available immediately without requiring cilium-operator to get involved.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "nodeidentity": {
          "description": "NodeIdentity is the Cilium numeric identity allocated for the node, if any.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the realized specification/configuration and status of the node.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "azure": {
          "description": "Azure is the Azure specific status of the node.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "interfaces": {
              "description": "Interfaces is the list of interfaces on the node",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "AzureInterface represents an Azure Interface",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "GatewayIP": {
                    "description": "GatewayIP is the interface's subnet's default route",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "addresses": {
                    "description": "Addresses is the list of all IPs associated with the interface, including all secondary addresses",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "AzureAddress is an IP address assigned to an AzureInterface",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "ip": {
                          "description": "IP is the ip address of the address",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "state": {
                          "description": "State is the provisioning state of the address",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "subnet": {
                          "description": "Subnet is the subnet the address belongs to",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "cidr": {
                    "description": "CIDR is the range that the interface belongs to.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "id": {
                    "description": "ID is the identifier",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "mac": {
                    "description": "MAC is the mac address",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name is the name of the interface",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "security-group": {
                    "description": "SecurityGroup is the security group associated with the interface",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "state": {
                    "description": "State is the provisioning state",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "eni": {
          "description": "ENI is the AWS ENI specific status of the node.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "enis": {
              "description": "ENIs is the list of ENIs on the node",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "description": "ENI represents an AWS Elastic Network Interface \n More details: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "addresses": {
                    "description": "Addresses is the list of all secondary IPs associated with the ENI",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "availability-zone": {
                    "description": "AvailabilityZone is the availability zone of the ENI",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "description": {
                    "description": "Description is the description field of the ENI",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "id": {
                    "description": "ID is the ENI ID",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "ip": {
                    "description": "IP is the primary IP of the ENI",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "mac": {
                    "description": "MAC is the mac address of the ENI",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "number": {
                    "description": "Number is the interface index, it used in combination with FirstInterfaceIndex",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "security-groups": {
                    "description": "SecurityGroups are the security groups associated with the ENI",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "subnet": {
                    "description": "Subnet is the subnet the ENI is associated with",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "cidr": {
                        "description": "CIDR is the CIDR range associated with the subnet",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "id": {
                        "description": "ID is the ID of the subnet",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "vpc": {
                    "description": "VPC is the VPC information to which the ENI is attached to",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "cidrs": {
                        "description": "CIDRs is the list of CIDR ranges associated with the VPC",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "id": {
                        "description": "/ ID is the ID of a VPC",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "primary-cidr": {
                        "description": "PrimaryCIDR is the primary CIDR of the VPC",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "ipam": {
          "description": "IPAM is the IPAM status of the node.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "operator-status": {
              "description": "Operator is the Operator status of the node",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "error": {
                  "description": "Error is the error message set by cilium-operator.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "used": {
              "description": "Used lists all IPs out of Spec.IPAM.Pool which have been allocated and are in use.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "description": "AllocationIP is an IP which is available for allocation, or already has been allocated",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "owner": {
                    "description": "Owner is the owner of the IP. This field is set if the IP has been allocated. It will be set to the pod name or another identifier representing the usage of the IP \n The owner field is left blank for an entry in Spec.IPAM.Pool and filled out as the IP is used and also added to Status.IPAM.Used.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resource": {
                    "description": "Resource is set for both available and allocated IPs, it represents what resource the IP is associated with, e.g. in combination with AWS ENI, this will refer to the ID of the ENI",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "cilium.io",
      "kind": "CiliumNode",
      "version": "v2"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}