#!/bin/bash

set -e

helmdir=$1
patch_values=$2

name=`yq eval .name $helmdir/Chart.yaml`
version=`yq eval .version $helmdir/Chart.yaml`
if [ -z "$CI_COMMIT_TAG" ]; then
  version=$version-$CI_COMMIT_REF_SLUG
  channel=dev
else
  channel=stable
  if [ "$version" != "$CI_COMMIT_TAG" ]; then
    echo Chart version and tag mismatch: "$version" vs "$CI_COMMIT_TAG" >> /dev/stderr
    exit 1
  fi
fi

if [ -z "$CI_COMMIT_TAG" ]; then
  appVersion=$version.$CI_PIPELINE_IID
else
  appVersion=$version
fi

# copy the Chart in the safe place
tmp_chart=`mktemp`
cp $helmdir/Chart.yaml $tmp_chart
tmp_values=`mktemp`
cp $helmdir/values.yaml $tmp_values

if [[ "$patch_values" != *"NO_PATCH"* ]]; then
  yq e -i ".appVersion = \"$appVersion\"" $helmdir/Chart.yaml
fi
for path in $patch_values; do
  if [ "$path" != "NO_PATCH" ]; then
    yq e -i "$path = \"$appVersion\"" $helmdir/values.yaml
  fi
done

helm package --version $version ./$helmdir
curl --request POST \
  --user gitlab-ci-token:$CI_JOB_TOKEN \
  --form "chart=@${name}-${version}.tgz" \
  "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/${channel}/charts"
rm -f ${name}-${version}.tgz

if [ -z "$CI_COMMIT_TAG" ]; then
  version=$version.$CI_PIPELINE_IID
  helm package --version $version ./$helmdir
  curl --request POST \
    --user gitlab-ci-token:$CI_JOB_TOKEN \
    --form "chart=@${name}-${version}.tgz" \
    "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/${channel}/charts"
  rm -f ${name}-${version}.tgz
fi

cp $tmp_chart $helmdir/Chart.yaml
cp $tmp_values $helmdir/values.yaml
